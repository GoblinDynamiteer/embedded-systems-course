
fanControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000055c  000005d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000055c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000005e4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000614  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  00000654  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009f3  00000000  00000000  0000068c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000752  00000000  00000000  0000107f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000392  00000000  00000000  000017d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000060  00000000  00000000  00001b64  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000430  00000000  00000000  00001bc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000323  00000000  00000000  00001ff4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00002317  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e5       	ldi	r30, 0x5C	; 92
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 bd 00 	call	0x17a	; 0x17a <main>
  8e:	0c 94 ac 02 	jmp	0x558	; 0x558 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <setFanSpeed>:
int checkPin(int pin){
	return (PINC & (1 << pin));
}

/*   Set fan speed via PWM?! */
void setFanSpeed(int n){
  96:	cf 93       	push	r28
  98:	df 93       	push	r29
    uint8_t dutyCycle;
    dutyCycle = n * DUTY_CYCLE_STEPS + MIN_DUTY_CYCLE;
    if(!n){
  9a:	00 97       	sbiw	r24, 0x00	; 0
  9c:	19 f4       	brne	.+6      	; 0xa4 <setFanSpeed+0xe>
        DDRB &= ~(1<< FAN_PIN);
  9e:	23 98       	cbi	0x04, 3	; 4
        dutyCycle = 0x00;
  a0:	60 e0       	ldi	r22, 0x00	; 0
  a2:	26 c0       	rjmp	.+76     	; 0xf0 <setFanSpeed+0x5a>
  a4:	ec 01       	movw	r28, r24
}

/*   Set fan speed via PWM?! */
void setFanSpeed(int n){
    uint8_t dutyCycle;
    dutyCycle = n * DUTY_CYCLE_STEPS + MIN_DUTY_CYCLE;
  a6:	bc 01       	movw	r22, r24
  a8:	99 0f       	add	r25, r25
  aa:	88 0b       	sbc	r24, r24
  ac:	99 0b       	sbc	r25, r25
  ae:	0e 94 b3 01 	call	0x366	; 0x366 <__floatsisf>
  b2:	2d ec       	ldi	r18, 0xCD	; 205
  b4:	3c ec       	ldi	r19, 0xCC	; 204
  b6:	4e e8       	ldi	r20, 0x8E	; 142
  b8:	51 e4       	ldi	r21, 0x41	; 65
  ba:	0e 94 3f 02 	call	0x47e	; 0x47e <__mulsf3>
  be:	20 e0       	ldi	r18, 0x00	; 0
  c0:	30 e0       	ldi	r19, 0x00	; 0
  c2:	49 e9       	ldi	r20, 0x99	; 153
  c4:	52 e4       	ldi	r21, 0x42	; 66
  c6:	0e 94 16 01 	call	0x22c	; 0x22c <__addsf3>
  ca:	0e 94 82 01 	call	0x304	; 0x304 <__fixunssfsi>
    if(!n){
        DDRB &= ~(1<< FAN_PIN);
        dutyCycle = 0x00;
    }
    if(n == 1){
  ce:	c1 30       	cpi	r28, 0x01	; 1
  d0:	d1 05       	cpc	r29, r1
  d2:	59 f4       	brne	.+22     	; 0xea <setFanSpeed+0x54>
        DDRB |= (1<< FAN_PIN);
  d4:	23 9a       	sbi	0x04, 3	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d6:	2f ef       	ldi	r18, 0xFF	; 255
  d8:	8d e2       	ldi	r24, 0x2D	; 45
  da:	92 e2       	ldi	r25, 0x22	; 34
  dc:	21 50       	subi	r18, 0x01	; 1
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	90 40       	sbci	r25, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <setFanSpeed+0x46>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <setFanSpeed+0x50>
  e6:	00 00       	nop
  e8:	03 c0       	rjmp	.+6      	; 0xf0 <setFanSpeed+0x5a>
        _delay_ms(700);
    }
    if(n == MAX_SPEED){
  ea:	2a 97       	sbiw	r28, 0x0a	; 10
  ec:	09 f4       	brne	.+2      	; 0xf0 <setFanSpeed+0x5a>
        dutyCycle = 255;
  ee:	6f ef       	ldi	r22, 0xFF	; 255
    }

    OCR2A = dutyCycle;
  f0:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    // set PWM for 50% duty cycle
    TCCR2A |= (1 << COM2A1);
  f4:	e0 eb       	ldi	r30, 0xB0	; 176
  f6:	f0 e0       	ldi	r31, 0x00	; 0
  f8:	80 81       	ld	r24, Z
  fa:	80 68       	ori	r24, 0x80	; 128
  fc:	80 83       	st	Z, r24
    // set none-inverting mode
    TCCR2A |= (1 << WGM21) | (1 << WGM20);
  fe:	80 81       	ld	r24, Z
 100:	83 60       	ori	r24, 0x03	; 3
 102:	80 83       	st	Z, r24
    // set fast PWM Mode
    TCCR2B |= (1 << CS21);
 104:	e1 eb       	ldi	r30, 0xB1	; 177
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	82 60       	ori	r24, 0x02	; 2
 10c:	80 83       	st	Z, r24
 10e:	8f e3       	ldi	r24, 0x3F	; 63
 110:	9c e9       	ldi	r25, 0x9C	; 156
 112:	01 97       	sbiw	r24, 0x01	; 1
 114:	f1 f7       	brne	.-4      	; 0x112 <setFanSpeed+0x7c>
 116:	00 c0       	rjmp	.+0      	; 0x118 <setFanSpeed+0x82>
 118:	00 00       	nop
    // set prescaler to 8 and starts PWM
    _delay_ms(10);
}
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	08 95       	ret

00000120 <setLedIndicator>:

void setLedIndicator(int n){
 120:	bc 01       	movw	r22, r24
    /*   Set LEDs off    */
    PORTD = 0x00;
 122:	1b b8       	out	0x0b, r1	; 11
    PORTB &= (0b11101000);
 124:	85 b1       	in	r24, 0x05	; 5
 126:	88 7e       	andi	r24, 0xE8	; 232
 128:	85 b9       	out	0x05, r24	; 5
    /*  Set LEDs on     */
    if(n == OFF){
        return;
    }
    for(int i = 0; i < n; i++){
 12a:	16 16       	cp	r1, r22
 12c:	17 06       	cpc	r1, r23
 12e:	24 f5       	brge	.+72     	; 0x178 <setLedIndicator+0x58>
 130:	e0 e0       	ldi	r30, 0x00	; 0
 132:	f1 e0       	ldi	r31, 0x01	; 1
 134:	20 e0       	ldi	r18, 0x00	; 0
 136:	30 e0       	ldi	r19, 0x00	; 0
        if(i < 6){
            PORTD |= (1 << ledPins[i]);
        }
        else{
            PORTB |= (1 << ledPins[i]);
 138:	a1 e0       	ldi	r26, 0x01	; 1
 13a:	b0 e0       	ldi	r27, 0x00	; 0
    /*  Set LEDs on     */
    if(n == OFF){
        return;
    }
    for(int i = 0; i < n; i++){
        if(i < 6){
 13c:	26 30       	cpi	r18, 0x06	; 6
 13e:	31 05       	cpc	r19, r1
 140:	5c f4       	brge	.+22     	; 0x158 <setLedIndicator+0x38>
            PORTD |= (1 << ledPins[i]);
 142:	4b b1       	in	r20, 0x0b	; 11
 144:	cd 01       	movw	r24, r26
 146:	00 80       	ld	r0, Z
 148:	02 c0       	rjmp	.+4      	; 0x14e <setLedIndicator+0x2e>
 14a:	88 0f       	add	r24, r24
 14c:	99 1f       	adc	r25, r25
 14e:	0a 94       	dec	r0
 150:	e2 f7       	brpl	.-8      	; 0x14a <setLedIndicator+0x2a>
 152:	84 2b       	or	r24, r20
 154:	8b b9       	out	0x0b, r24	; 11
 156:	0a c0       	rjmp	.+20     	; 0x16c <setLedIndicator+0x4c>
        }
        else{
            PORTB |= (1 << ledPins[i]);
 158:	95 b1       	in	r25, 0x05	; 5
 15a:	ad 01       	movw	r20, r26
 15c:	00 80       	ld	r0, Z
 15e:	02 c0       	rjmp	.+4      	; 0x164 <setLedIndicator+0x44>
 160:	44 0f       	add	r20, r20
 162:	55 1f       	adc	r21, r21
 164:	0a 94       	dec	r0
 166:	e2 f7       	brpl	.-8      	; 0x160 <setLedIndicator+0x40>
 168:	49 2b       	or	r20, r25
 16a:	45 b9       	out	0x05, r20	; 5
    PORTB &= (0b11101000);
    /*  Set LEDs on     */
    if(n == OFF){
        return;
    }
    for(int i = 0; i < n; i++){
 16c:	2f 5f       	subi	r18, 0xFF	; 255
 16e:	3f 4f       	sbci	r19, 0xFF	; 255
 170:	32 96       	adiw	r30, 0x02	; 2
 172:	26 17       	cp	r18, r22
 174:	37 07       	cpc	r19, r23
 176:	11 f7       	brne	.-60     	; 0x13c <setLedIndicator+0x1c>
 178:	08 95       	ret

0000017a <main>:
void setFanSpeed2(int n);

int main(void){
    //DDRC &= ~(1 << ON_BUTTON);
    //DDRC &= ~(1 << OFF_BUTTON);
    DDRC = 0x00;
 17a:	17 b8       	out	0x07, r1	; 7
    DDRD = (0b11111111);
 17c:	8f ef       	ldi	r24, 0xFF	; 255
 17e:	8a b9       	out	0x0a, r24	; 10
    DDRB = (0b11111111);
 180:	84 b9       	out	0x04, r24	; 4
    //DDRB |= (1<<LED8_PIN) | (1<<LED9_PIN) | (1<<LED10_PIN) | (1<<FAN_PIN);
    int fanSpeed = OFF;
    int updateSetting = 0;
    /*  Test leds */
    for(int i = 1; i <= 10; i++){
 182:	c1 e0       	ldi	r28, 0x01	; 1
 184:	d0 e0       	ldi	r29, 0x00	; 0
        setLedIndicator(i);
 186:	ce 01       	movw	r24, r28
 188:	0e 94 90 00 	call	0x120	; 0x120 <setLedIndicator>
 18c:	2f ef       	ldi	r18, 0xFF	; 255
 18e:	83 ec       	ldi	r24, 0xC3	; 195
 190:	99 e0       	ldi	r25, 0x09	; 9
 192:	21 50       	subi	r18, 0x01	; 1
 194:	80 40       	sbci	r24, 0x00	; 0
 196:	90 40       	sbci	r25, 0x00	; 0
 198:	e1 f7       	brne	.-8      	; 0x192 <main+0x18>
 19a:	00 c0       	rjmp	.+0      	; 0x19c <main+0x22>
 19c:	00 00       	nop
    DDRB = (0b11111111);
    //DDRB |= (1<<LED8_PIN) | (1<<LED9_PIN) | (1<<LED10_PIN) | (1<<FAN_PIN);
    int fanSpeed = OFF;
    int updateSetting = 0;
    /*  Test leds */
    for(int i = 1; i <= 10; i++){
 19e:	21 96       	adiw	r28, 0x01	; 1
 1a0:	cb 30       	cpi	r28, 0x0B	; 11
 1a2:	d1 05       	cpc	r29, r1
 1a4:	81 f7       	brne	.-32     	; 0x186 <main+0xc>
 1a6:	2f ef       	ldi	r18, 0xFF	; 255
 1a8:	83 ed       	ldi	r24, 0xD3	; 211
 1aa:	90 e3       	ldi	r25, 0x30	; 48
 1ac:	21 50       	subi	r18, 0x01	; 1
 1ae:	80 40       	sbci	r24, 0x00	; 0
 1b0:	90 40       	sbci	r25, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0x32>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x3c>
 1b6:	00 00       	nop
    //DDRC &= ~(1 << OFF_BUTTON);
    DDRC = 0x00;
    DDRD = (0b11111111);
    DDRB = (0b11111111);
    //DDRB |= (1<<LED8_PIN) | (1<<LED9_PIN) | (1<<LED10_PIN) | (1<<FAN_PIN);
    int fanSpeed = OFF;
 1b8:	c0 e0       	ldi	r28, 0x00	; 0
 1ba:	d0 e0       	ldi	r29, 0x00	; 0
 1bc:	e1 2c       	mov	r14, r1
 1be:	f1 2c       	mov	r15, r1
 1c0:	0a e0       	ldi	r16, 0x0A	; 10
 1c2:	10 e0       	ldi	r17, 0x00	; 0
        _delay_ms(200);
    }
    _delay_ms(1000);
    while (1){
        //if(checkPin(ON_BUTTON)){
        if(PINC & (1 << ON_BUTTON)){
 1c4:	31 9b       	sbis	0x06, 1	; 6
 1c6:	12 c0       	rjmp	.+36     	; 0x1ec <main+0x72>
 1c8:	21 96       	adiw	r28, 0x01	; 1
 1ca:	cb 30       	cpi	r28, 0x0B	; 11
 1cc:	d1 05       	cpc	r29, r1
 1ce:	14 f0       	brlt	.+4      	; 0x1d4 <main+0x5a>
 1d0:	c0 2f       	mov	r28, r16
 1d2:	d1 2f       	mov	r29, r17
 1d4:	9f ef       	ldi	r25, 0xFF	; 255
 1d6:	21 ee       	ldi	r18, 0xE1	; 225
 1d8:	84 e0       	ldi	r24, 0x04	; 4
 1da:	91 50       	subi	r25, 0x01	; 1
 1dc:	20 40       	sbci	r18, 0x00	; 0
 1de:	80 40       	sbci	r24, 0x00	; 0
 1e0:	e1 f7       	brne	.-8      	; 0x1da <main+0x60>
 1e2:	00 c0       	rjmp	.+0      	; 0x1e4 <main+0x6a>
 1e4:	00 00       	nop
            }
            updateSetting = 1;
            _delay_ms(100);
        }
        //if(checkPin(OFF_BUTTON)){
        if(PINC & (1 << OFF_BUTTON)){
 1e6:	30 99       	sbic	0x06, 0	; 6
 1e8:	03 c0       	rjmp	.+6      	; 0x1f0 <main+0x76>
 1ea:	0f c0       	rjmp	.+30     	; 0x20a <main+0x90>
 1ec:	30 9b       	sbis	0x06, 0	; 6
 1ee:	13 c0       	rjmp	.+38     	; 0x216 <main+0x9c>
 1f0:	21 97       	sbiw	r28, 0x01	; 1
 1f2:	12 f4       	brpl	.+4      	; 0x1f8 <main+0x7e>
 1f4:	ce 2d       	mov	r28, r14
 1f6:	df 2d       	mov	r29, r15
 1f8:	8f ef       	ldi	r24, 0xFF	; 255
 1fa:	91 ee       	ldi	r25, 0xE1	; 225
 1fc:	24 e0       	ldi	r18, 0x04	; 4
 1fe:	81 50       	subi	r24, 0x01	; 1
 200:	90 40       	sbci	r25, 0x00	; 0
 202:	20 40       	sbci	r18, 0x00	; 0
 204:	e1 f7       	brne	.-8      	; 0x1fe <main+0x84>
 206:	00 c0       	rjmp	.+0      	; 0x208 <main+0x8e>
 208:	00 00       	nop
              }
              updateSetting = 1;
              _delay_ms(100);
        }
        if(updateSetting){
            setFanSpeed(fanSpeed);
 20a:	ce 01       	movw	r24, r28
 20c:	0e 94 4b 00 	call	0x96	; 0x96 <setFanSpeed>
            setLedIndicator(fanSpeed);
 210:	ce 01       	movw	r24, r28
 212:	0e 94 90 00 	call	0x120	; 0x120 <setLedIndicator>
 216:	8f ef       	ldi	r24, 0xFF	; 255
 218:	91 ee       	ldi	r25, 0xE1	; 225
 21a:	24 e0       	ldi	r18, 0x04	; 4
 21c:	81 50       	subi	r24, 0x01	; 1
 21e:	90 40       	sbci	r25, 0x00	; 0
 220:	20 40       	sbci	r18, 0x00	; 0
 222:	e1 f7       	brne	.-8      	; 0x21c <main+0xa2>
 224:	00 c0       	rjmp	.+0      	; 0x226 <main+0xac>
 226:	00 00       	nop
 228:	cd cf       	rjmp	.-102    	; 0x1c4 <main+0x4a>

0000022a <__subsf3>:
 22a:	50 58       	subi	r21, 0x80	; 128

0000022c <__addsf3>:
 22c:	bb 27       	eor	r27, r27
 22e:	aa 27       	eor	r26, r26
 230:	0e 94 2d 01 	call	0x25a	; 0x25a <__addsf3x>
 234:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_round>
 238:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__fp_pscA>
 23c:	38 f0       	brcs	.+14     	; 0x24c <__addsf3+0x20>
 23e:	0e 94 fe 01 	call	0x3fc	; 0x3fc <__fp_pscB>
 242:	20 f0       	brcs	.+8      	; 0x24c <__addsf3+0x20>
 244:	39 f4       	brne	.+14     	; 0x254 <__addsf3+0x28>
 246:	9f 3f       	cpi	r25, 0xFF	; 255
 248:	19 f4       	brne	.+6      	; 0x250 <__addsf3+0x24>
 24a:	26 f4       	brtc	.+8      	; 0x254 <__addsf3+0x28>
 24c:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__fp_nan>
 250:	0e f4       	brtc	.+2      	; 0x254 <__addsf3+0x28>
 252:	e0 95       	com	r30
 254:	e7 fb       	bst	r30, 7
 256:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_inf>

0000025a <__addsf3x>:
 25a:	e9 2f       	mov	r30, r25
 25c:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_split3>
 260:	58 f3       	brcs	.-42     	; 0x238 <__addsf3+0xc>
 262:	ba 17       	cp	r27, r26
 264:	62 07       	cpc	r22, r18
 266:	73 07       	cpc	r23, r19
 268:	84 07       	cpc	r24, r20
 26a:	95 07       	cpc	r25, r21
 26c:	20 f0       	brcs	.+8      	; 0x276 <__addsf3x+0x1c>
 26e:	79 f4       	brne	.+30     	; 0x28e <__addsf3x+0x34>
 270:	a6 f5       	brtc	.+104    	; 0x2da <__addsf3x+0x80>
 272:	0c 94 38 02 	jmp	0x470	; 0x470 <__fp_zero>
 276:	0e f4       	brtc	.+2      	; 0x27a <__addsf3x+0x20>
 278:	e0 95       	com	r30
 27a:	0b 2e       	mov	r0, r27
 27c:	ba 2f       	mov	r27, r26
 27e:	a0 2d       	mov	r26, r0
 280:	0b 01       	movw	r0, r22
 282:	b9 01       	movw	r22, r18
 284:	90 01       	movw	r18, r0
 286:	0c 01       	movw	r0, r24
 288:	ca 01       	movw	r24, r20
 28a:	a0 01       	movw	r20, r0
 28c:	11 24       	eor	r1, r1
 28e:	ff 27       	eor	r31, r31
 290:	59 1b       	sub	r21, r25
 292:	99 f0       	breq	.+38     	; 0x2ba <__addsf3x+0x60>
 294:	59 3f       	cpi	r21, 0xF9	; 249
 296:	50 f4       	brcc	.+20     	; 0x2ac <__addsf3x+0x52>
 298:	50 3e       	cpi	r21, 0xE0	; 224
 29a:	68 f1       	brcs	.+90     	; 0x2f6 <__addsf3x+0x9c>
 29c:	1a 16       	cp	r1, r26
 29e:	f0 40       	sbci	r31, 0x00	; 0
 2a0:	a2 2f       	mov	r26, r18
 2a2:	23 2f       	mov	r18, r19
 2a4:	34 2f       	mov	r19, r20
 2a6:	44 27       	eor	r20, r20
 2a8:	58 5f       	subi	r21, 0xF8	; 248
 2aa:	f3 cf       	rjmp	.-26     	; 0x292 <__addsf3x+0x38>
 2ac:	46 95       	lsr	r20
 2ae:	37 95       	ror	r19
 2b0:	27 95       	ror	r18
 2b2:	a7 95       	ror	r26
 2b4:	f0 40       	sbci	r31, 0x00	; 0
 2b6:	53 95       	inc	r21
 2b8:	c9 f7       	brne	.-14     	; 0x2ac <__addsf3x+0x52>
 2ba:	7e f4       	brtc	.+30     	; 0x2da <__addsf3x+0x80>
 2bc:	1f 16       	cp	r1, r31
 2be:	ba 0b       	sbc	r27, r26
 2c0:	62 0b       	sbc	r22, r18
 2c2:	73 0b       	sbc	r23, r19
 2c4:	84 0b       	sbc	r24, r20
 2c6:	ba f0       	brmi	.+46     	; 0x2f6 <__addsf3x+0x9c>
 2c8:	91 50       	subi	r25, 0x01	; 1
 2ca:	a1 f0       	breq	.+40     	; 0x2f4 <__addsf3x+0x9a>
 2cc:	ff 0f       	add	r31, r31
 2ce:	bb 1f       	adc	r27, r27
 2d0:	66 1f       	adc	r22, r22
 2d2:	77 1f       	adc	r23, r23
 2d4:	88 1f       	adc	r24, r24
 2d6:	c2 f7       	brpl	.-16     	; 0x2c8 <__addsf3x+0x6e>
 2d8:	0e c0       	rjmp	.+28     	; 0x2f6 <__addsf3x+0x9c>
 2da:	ba 0f       	add	r27, r26
 2dc:	62 1f       	adc	r22, r18
 2de:	73 1f       	adc	r23, r19
 2e0:	84 1f       	adc	r24, r20
 2e2:	48 f4       	brcc	.+18     	; 0x2f6 <__addsf3x+0x9c>
 2e4:	87 95       	ror	r24
 2e6:	77 95       	ror	r23
 2e8:	67 95       	ror	r22
 2ea:	b7 95       	ror	r27
 2ec:	f7 95       	ror	r31
 2ee:	9e 3f       	cpi	r25, 0xFE	; 254
 2f0:	08 f0       	brcs	.+2      	; 0x2f4 <__addsf3x+0x9a>
 2f2:	b0 cf       	rjmp	.-160    	; 0x254 <__addsf3+0x28>
 2f4:	93 95       	inc	r25
 2f6:	88 0f       	add	r24, r24
 2f8:	08 f0       	brcs	.+2      	; 0x2fc <__addsf3x+0xa2>
 2fa:	99 27       	eor	r25, r25
 2fc:	ee 0f       	add	r30, r30
 2fe:	97 95       	ror	r25
 300:	87 95       	ror	r24
 302:	08 95       	ret

00000304 <__fixunssfsi>:
 304:	0e 94 1e 02 	call	0x43c	; 0x43c <__fp_splitA>
 308:	88 f0       	brcs	.+34     	; 0x32c <__fixunssfsi+0x28>
 30a:	9f 57       	subi	r25, 0x7F	; 127
 30c:	98 f0       	brcs	.+38     	; 0x334 <__fixunssfsi+0x30>
 30e:	b9 2f       	mov	r27, r25
 310:	99 27       	eor	r25, r25
 312:	b7 51       	subi	r27, 0x17	; 23
 314:	b0 f0       	brcs	.+44     	; 0x342 <__fixunssfsi+0x3e>
 316:	e1 f0       	breq	.+56     	; 0x350 <__fixunssfsi+0x4c>
 318:	66 0f       	add	r22, r22
 31a:	77 1f       	adc	r23, r23
 31c:	88 1f       	adc	r24, r24
 31e:	99 1f       	adc	r25, r25
 320:	1a f0       	brmi	.+6      	; 0x328 <__fixunssfsi+0x24>
 322:	ba 95       	dec	r27
 324:	c9 f7       	brne	.-14     	; 0x318 <__fixunssfsi+0x14>
 326:	14 c0       	rjmp	.+40     	; 0x350 <__fixunssfsi+0x4c>
 328:	b1 30       	cpi	r27, 0x01	; 1
 32a:	91 f0       	breq	.+36     	; 0x350 <__fixunssfsi+0x4c>
 32c:	0e 94 38 02 	call	0x470	; 0x470 <__fp_zero>
 330:	b1 e0       	ldi	r27, 0x01	; 1
 332:	08 95       	ret
 334:	0c 94 38 02 	jmp	0x470	; 0x470 <__fp_zero>
 338:	67 2f       	mov	r22, r23
 33a:	78 2f       	mov	r23, r24
 33c:	88 27       	eor	r24, r24
 33e:	b8 5f       	subi	r27, 0xF8	; 248
 340:	39 f0       	breq	.+14     	; 0x350 <__fixunssfsi+0x4c>
 342:	b9 3f       	cpi	r27, 0xF9	; 249
 344:	cc f3       	brlt	.-14     	; 0x338 <__fixunssfsi+0x34>
 346:	86 95       	lsr	r24
 348:	77 95       	ror	r23
 34a:	67 95       	ror	r22
 34c:	b3 95       	inc	r27
 34e:	d9 f7       	brne	.-10     	; 0x346 <__fixunssfsi+0x42>
 350:	3e f4       	brtc	.+14     	; 0x360 <__fixunssfsi+0x5c>
 352:	90 95       	com	r25
 354:	80 95       	com	r24
 356:	70 95       	com	r23
 358:	61 95       	neg	r22
 35a:	7f 4f       	sbci	r23, 0xFF	; 255
 35c:	8f 4f       	sbci	r24, 0xFF	; 255
 35e:	9f 4f       	sbci	r25, 0xFF	; 255
 360:	08 95       	ret

00000362 <__floatunsisf>:
 362:	e8 94       	clt
 364:	09 c0       	rjmp	.+18     	; 0x378 <__floatsisf+0x12>

00000366 <__floatsisf>:
 366:	97 fb       	bst	r25, 7
 368:	3e f4       	brtc	.+14     	; 0x378 <__floatsisf+0x12>
 36a:	90 95       	com	r25
 36c:	80 95       	com	r24
 36e:	70 95       	com	r23
 370:	61 95       	neg	r22
 372:	7f 4f       	sbci	r23, 0xFF	; 255
 374:	8f 4f       	sbci	r24, 0xFF	; 255
 376:	9f 4f       	sbci	r25, 0xFF	; 255
 378:	99 23       	and	r25, r25
 37a:	a9 f0       	breq	.+42     	; 0x3a6 <__floatsisf+0x40>
 37c:	f9 2f       	mov	r31, r25
 37e:	96 e9       	ldi	r25, 0x96	; 150
 380:	bb 27       	eor	r27, r27
 382:	93 95       	inc	r25
 384:	f6 95       	lsr	r31
 386:	87 95       	ror	r24
 388:	77 95       	ror	r23
 38a:	67 95       	ror	r22
 38c:	b7 95       	ror	r27
 38e:	f1 11       	cpse	r31, r1
 390:	f8 cf       	rjmp	.-16     	; 0x382 <__floatsisf+0x1c>
 392:	fa f4       	brpl	.+62     	; 0x3d2 <__floatsisf+0x6c>
 394:	bb 0f       	add	r27, r27
 396:	11 f4       	brne	.+4      	; 0x39c <__floatsisf+0x36>
 398:	60 ff       	sbrs	r22, 0
 39a:	1b c0       	rjmp	.+54     	; 0x3d2 <__floatsisf+0x6c>
 39c:	6f 5f       	subi	r22, 0xFF	; 255
 39e:	7f 4f       	sbci	r23, 0xFF	; 255
 3a0:	8f 4f       	sbci	r24, 0xFF	; 255
 3a2:	9f 4f       	sbci	r25, 0xFF	; 255
 3a4:	16 c0       	rjmp	.+44     	; 0x3d2 <__floatsisf+0x6c>
 3a6:	88 23       	and	r24, r24
 3a8:	11 f0       	breq	.+4      	; 0x3ae <__floatsisf+0x48>
 3aa:	96 e9       	ldi	r25, 0x96	; 150
 3ac:	11 c0       	rjmp	.+34     	; 0x3d0 <__floatsisf+0x6a>
 3ae:	77 23       	and	r23, r23
 3b0:	21 f0       	breq	.+8      	; 0x3ba <__floatsisf+0x54>
 3b2:	9e e8       	ldi	r25, 0x8E	; 142
 3b4:	87 2f       	mov	r24, r23
 3b6:	76 2f       	mov	r23, r22
 3b8:	05 c0       	rjmp	.+10     	; 0x3c4 <__floatsisf+0x5e>
 3ba:	66 23       	and	r22, r22
 3bc:	71 f0       	breq	.+28     	; 0x3da <__floatsisf+0x74>
 3be:	96 e8       	ldi	r25, 0x86	; 134
 3c0:	86 2f       	mov	r24, r22
 3c2:	70 e0       	ldi	r23, 0x00	; 0
 3c4:	60 e0       	ldi	r22, 0x00	; 0
 3c6:	2a f0       	brmi	.+10     	; 0x3d2 <__floatsisf+0x6c>
 3c8:	9a 95       	dec	r25
 3ca:	66 0f       	add	r22, r22
 3cc:	77 1f       	adc	r23, r23
 3ce:	88 1f       	adc	r24, r24
 3d0:	da f7       	brpl	.-10     	; 0x3c8 <__floatsisf+0x62>
 3d2:	88 0f       	add	r24, r24
 3d4:	96 95       	lsr	r25
 3d6:	87 95       	ror	r24
 3d8:	97 f9       	bld	r25, 7
 3da:	08 95       	ret

000003dc <__fp_inf>:
 3dc:	97 f9       	bld	r25, 7
 3de:	9f 67       	ori	r25, 0x7F	; 127
 3e0:	80 e8       	ldi	r24, 0x80	; 128
 3e2:	70 e0       	ldi	r23, 0x00	; 0
 3e4:	60 e0       	ldi	r22, 0x00	; 0
 3e6:	08 95       	ret

000003e8 <__fp_nan>:
 3e8:	9f ef       	ldi	r25, 0xFF	; 255
 3ea:	80 ec       	ldi	r24, 0xC0	; 192
 3ec:	08 95       	ret

000003ee <__fp_pscA>:
 3ee:	00 24       	eor	r0, r0
 3f0:	0a 94       	dec	r0
 3f2:	16 16       	cp	r1, r22
 3f4:	17 06       	cpc	r1, r23
 3f6:	18 06       	cpc	r1, r24
 3f8:	09 06       	cpc	r0, r25
 3fa:	08 95       	ret

000003fc <__fp_pscB>:
 3fc:	00 24       	eor	r0, r0
 3fe:	0a 94       	dec	r0
 400:	12 16       	cp	r1, r18
 402:	13 06       	cpc	r1, r19
 404:	14 06       	cpc	r1, r20
 406:	05 06       	cpc	r0, r21
 408:	08 95       	ret

0000040a <__fp_round>:
 40a:	09 2e       	mov	r0, r25
 40c:	03 94       	inc	r0
 40e:	00 0c       	add	r0, r0
 410:	11 f4       	brne	.+4      	; 0x416 <__fp_round+0xc>
 412:	88 23       	and	r24, r24
 414:	52 f0       	brmi	.+20     	; 0x42a <__fp_round+0x20>
 416:	bb 0f       	add	r27, r27
 418:	40 f4       	brcc	.+16     	; 0x42a <__fp_round+0x20>
 41a:	bf 2b       	or	r27, r31
 41c:	11 f4       	brne	.+4      	; 0x422 <__fp_round+0x18>
 41e:	60 ff       	sbrs	r22, 0
 420:	04 c0       	rjmp	.+8      	; 0x42a <__fp_round+0x20>
 422:	6f 5f       	subi	r22, 0xFF	; 255
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	8f 4f       	sbci	r24, 0xFF	; 255
 428:	9f 4f       	sbci	r25, 0xFF	; 255
 42a:	08 95       	ret

0000042c <__fp_split3>:
 42c:	57 fd       	sbrc	r21, 7
 42e:	90 58       	subi	r25, 0x80	; 128
 430:	44 0f       	add	r20, r20
 432:	55 1f       	adc	r21, r21
 434:	59 f0       	breq	.+22     	; 0x44c <__fp_splitA+0x10>
 436:	5f 3f       	cpi	r21, 0xFF	; 255
 438:	71 f0       	breq	.+28     	; 0x456 <__fp_splitA+0x1a>
 43a:	47 95       	ror	r20

0000043c <__fp_splitA>:
 43c:	88 0f       	add	r24, r24
 43e:	97 fb       	bst	r25, 7
 440:	99 1f       	adc	r25, r25
 442:	61 f0       	breq	.+24     	; 0x45c <__fp_splitA+0x20>
 444:	9f 3f       	cpi	r25, 0xFF	; 255
 446:	79 f0       	breq	.+30     	; 0x466 <__fp_splitA+0x2a>
 448:	87 95       	ror	r24
 44a:	08 95       	ret
 44c:	12 16       	cp	r1, r18
 44e:	13 06       	cpc	r1, r19
 450:	14 06       	cpc	r1, r20
 452:	55 1f       	adc	r21, r21
 454:	f2 cf       	rjmp	.-28     	; 0x43a <__fp_split3+0xe>
 456:	46 95       	lsr	r20
 458:	f1 df       	rcall	.-30     	; 0x43c <__fp_splitA>
 45a:	08 c0       	rjmp	.+16     	; 0x46c <__fp_splitA+0x30>
 45c:	16 16       	cp	r1, r22
 45e:	17 06       	cpc	r1, r23
 460:	18 06       	cpc	r1, r24
 462:	99 1f       	adc	r25, r25
 464:	f1 cf       	rjmp	.-30     	; 0x448 <__fp_splitA+0xc>
 466:	86 95       	lsr	r24
 468:	71 05       	cpc	r23, r1
 46a:	61 05       	cpc	r22, r1
 46c:	08 94       	sec
 46e:	08 95       	ret

00000470 <__fp_zero>:
 470:	e8 94       	clt

00000472 <__fp_szero>:
 472:	bb 27       	eor	r27, r27
 474:	66 27       	eor	r22, r22
 476:	77 27       	eor	r23, r23
 478:	cb 01       	movw	r24, r22
 47a:	97 f9       	bld	r25, 7
 47c:	08 95       	ret

0000047e <__mulsf3>:
 47e:	0e 94 52 02 	call	0x4a4	; 0x4a4 <__mulsf3x>
 482:	0c 94 05 02 	jmp	0x40a	; 0x40a <__fp_round>
 486:	0e 94 f7 01 	call	0x3ee	; 0x3ee <__fp_pscA>
 48a:	38 f0       	brcs	.+14     	; 0x49a <__mulsf3+0x1c>
 48c:	0e 94 fe 01 	call	0x3fc	; 0x3fc <__fp_pscB>
 490:	20 f0       	brcs	.+8      	; 0x49a <__mulsf3+0x1c>
 492:	95 23       	and	r25, r21
 494:	11 f0       	breq	.+4      	; 0x49a <__mulsf3+0x1c>
 496:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_inf>
 49a:	0c 94 f4 01 	jmp	0x3e8	; 0x3e8 <__fp_nan>
 49e:	11 24       	eor	r1, r1
 4a0:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_szero>

000004a4 <__mulsf3x>:
 4a4:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_split3>
 4a8:	70 f3       	brcs	.-36     	; 0x486 <__mulsf3+0x8>

000004aa <__mulsf3_pse>:
 4aa:	95 9f       	mul	r25, r21
 4ac:	c1 f3       	breq	.-16     	; 0x49e <__mulsf3+0x20>
 4ae:	95 0f       	add	r25, r21
 4b0:	50 e0       	ldi	r21, 0x00	; 0
 4b2:	55 1f       	adc	r21, r21
 4b4:	62 9f       	mul	r22, r18
 4b6:	f0 01       	movw	r30, r0
 4b8:	72 9f       	mul	r23, r18
 4ba:	bb 27       	eor	r27, r27
 4bc:	f0 0d       	add	r31, r0
 4be:	b1 1d       	adc	r27, r1
 4c0:	63 9f       	mul	r22, r19
 4c2:	aa 27       	eor	r26, r26
 4c4:	f0 0d       	add	r31, r0
 4c6:	b1 1d       	adc	r27, r1
 4c8:	aa 1f       	adc	r26, r26
 4ca:	64 9f       	mul	r22, r20
 4cc:	66 27       	eor	r22, r22
 4ce:	b0 0d       	add	r27, r0
 4d0:	a1 1d       	adc	r26, r1
 4d2:	66 1f       	adc	r22, r22
 4d4:	82 9f       	mul	r24, r18
 4d6:	22 27       	eor	r18, r18
 4d8:	b0 0d       	add	r27, r0
 4da:	a1 1d       	adc	r26, r1
 4dc:	62 1f       	adc	r22, r18
 4de:	73 9f       	mul	r23, r19
 4e0:	b0 0d       	add	r27, r0
 4e2:	a1 1d       	adc	r26, r1
 4e4:	62 1f       	adc	r22, r18
 4e6:	83 9f       	mul	r24, r19
 4e8:	a0 0d       	add	r26, r0
 4ea:	61 1d       	adc	r22, r1
 4ec:	22 1f       	adc	r18, r18
 4ee:	74 9f       	mul	r23, r20
 4f0:	33 27       	eor	r19, r19
 4f2:	a0 0d       	add	r26, r0
 4f4:	61 1d       	adc	r22, r1
 4f6:	23 1f       	adc	r18, r19
 4f8:	84 9f       	mul	r24, r20
 4fa:	60 0d       	add	r22, r0
 4fc:	21 1d       	adc	r18, r1
 4fe:	82 2f       	mov	r24, r18
 500:	76 2f       	mov	r23, r22
 502:	6a 2f       	mov	r22, r26
 504:	11 24       	eor	r1, r1
 506:	9f 57       	subi	r25, 0x7F	; 127
 508:	50 40       	sbci	r21, 0x00	; 0
 50a:	9a f0       	brmi	.+38     	; 0x532 <__mulsf3_pse+0x88>
 50c:	f1 f0       	breq	.+60     	; 0x54a <__mulsf3_pse+0xa0>
 50e:	88 23       	and	r24, r24
 510:	4a f0       	brmi	.+18     	; 0x524 <__mulsf3_pse+0x7a>
 512:	ee 0f       	add	r30, r30
 514:	ff 1f       	adc	r31, r31
 516:	bb 1f       	adc	r27, r27
 518:	66 1f       	adc	r22, r22
 51a:	77 1f       	adc	r23, r23
 51c:	88 1f       	adc	r24, r24
 51e:	91 50       	subi	r25, 0x01	; 1
 520:	50 40       	sbci	r21, 0x00	; 0
 522:	a9 f7       	brne	.-22     	; 0x50e <__mulsf3_pse+0x64>
 524:	9e 3f       	cpi	r25, 0xFE	; 254
 526:	51 05       	cpc	r21, r1
 528:	80 f0       	brcs	.+32     	; 0x54a <__mulsf3_pse+0xa0>
 52a:	0c 94 ee 01 	jmp	0x3dc	; 0x3dc <__fp_inf>
 52e:	0c 94 39 02 	jmp	0x472	; 0x472 <__fp_szero>
 532:	5f 3f       	cpi	r21, 0xFF	; 255
 534:	e4 f3       	brlt	.-8      	; 0x52e <__mulsf3_pse+0x84>
 536:	98 3e       	cpi	r25, 0xE8	; 232
 538:	d4 f3       	brlt	.-12     	; 0x52e <__mulsf3_pse+0x84>
 53a:	86 95       	lsr	r24
 53c:	77 95       	ror	r23
 53e:	67 95       	ror	r22
 540:	b7 95       	ror	r27
 542:	f7 95       	ror	r31
 544:	e7 95       	ror	r30
 546:	9f 5f       	subi	r25, 0xFF	; 255
 548:	c1 f7       	brne	.-16     	; 0x53a <__mulsf3_pse+0x90>
 54a:	fe 2b       	or	r31, r30
 54c:	88 0f       	add	r24, r24
 54e:	91 1d       	adc	r25, r1
 550:	96 95       	lsr	r25
 552:	87 95       	ror	r24
 554:	97 f9       	bld	r25, 7
 556:	08 95       	ret

00000558 <_exit>:
 558:	f8 94       	cli

0000055a <__stop_program>:
 55a:	ff cf       	rjmp	.-2      	; 0x55a <__stop_program>
