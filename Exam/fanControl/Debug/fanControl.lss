
fanControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000014  00800100  0000054c  000005e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000054c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000002  00800114  00800114  000005f4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000005f4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000624  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000664  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000978  00000000  00000000  0000069c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078d  00000000  00000000  00001014  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003ac  00000000  00000000  000017a1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000060  00000000  00000000  00001b50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000441  00000000  00000000  00001bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000022d  00000000  00000000  00001ff1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000221e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e4       	ldi	r30, 0x4C	; 76
  7c:	f5 e0       	ldi	r31, 0x05	; 5
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a4 31       	cpi	r26, 0x14	; 20
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a4 e1       	ldi	r26, 0x14	; 20
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 31       	cpi	r26, 0x16	; 22
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 cf 00 	call	0x19e	; 0x19e <main>
  9e:	0c 94 a4 02 	jmp	0x548	; 0x548 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setFanSpeed>:
	//return (PINC & (1 << pin));
    return (check > 0);
}

/*   Set fan speed via PWM?! */
void setFanSpeed(int n){
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
    uint8_t dutyCycle;
    dutyCycle = n * DUTY_CYCLE_STEPS + MIN_DUTY_CYCLE;
    if(!n){
  aa:	00 97       	sbiw	r24, 0x00	; 0
  ac:	39 f4       	brne	.+14     	; 0xbc <setFanSpeed+0x16>
        DDRB &= ~(1 << FAN_PIN);
  ae:	23 98       	cbi	0x04, 3	; 4
        dutyCycle = 0x00;
        fanRunning = 0;
  b0:	10 92 15 01 	sts	0x0115, r1	; 0x800115 <__data_end+0x1>
  b4:	10 92 14 01 	sts	0x0114, r1	; 0x800114 <__data_end>
void setFanSpeed(int n){
    uint8_t dutyCycle;
    dutyCycle = n * DUTY_CYCLE_STEPS + MIN_DUTY_CYCLE;
    if(!n){
        DDRB &= ~(1 << FAN_PIN);
        dutyCycle = 0x00;
  b8:	60 e0       	ldi	r22, 0x00	; 0
  ba:	32 c0       	rjmp	.+100    	; 0x120 <setFanSpeed+0x7a>
  bc:	ec 01       	movw	r28, r24
}

/*   Set fan speed via PWM?! */
void setFanSpeed(int n){
    uint8_t dutyCycle;
    dutyCycle = n * DUTY_CYCLE_STEPS + MIN_DUTY_CYCLE;
  be:	bc 01       	movw	r22, r24
  c0:	99 0f       	add	r25, r25
  c2:	88 0b       	sbc	r24, r24
  c4:	99 0b       	sbc	r25, r25
  c6:	0e 94 ab 01 	call	0x356	; 0x356 <__floatsisf>
  ca:	20 e0       	ldi	r18, 0x00	; 0
  cc:	30 e0       	ldi	r19, 0x00	; 0
  ce:	49 e9       	ldi	r20, 0x99	; 153
  d0:	51 e4       	ldi	r21, 0x41	; 65
  d2:	0e 94 37 02 	call	0x46e	; 0x46e <__mulsf3>
  d6:	20 e0       	ldi	r18, 0x00	; 0
  d8:	30 e0       	ldi	r19, 0x00	; 0
  da:	4f e7       	ldi	r20, 0x7F	; 127
  dc:	52 e4       	ldi	r21, 0x42	; 66
  de:	0e 94 0e 01 	call	0x21c	; 0x21c <__addsf3>
  e2:	0e 94 7a 01 	call	0x2f4	; 0x2f4 <__fixunssfsi>
    if(!n){
        DDRB &= ~(1 << FAN_PIN);
        dutyCycle = 0x00;
        fanRunning = 0;
    }
    if(n == 1 && !fanRunning){
  e6:	c1 30       	cpi	r28, 0x01	; 1
  e8:	d1 05       	cpc	r29, r1
  ea:	b9 f4       	brne	.+46     	; 0x11a <setFanSpeed+0x74>
  ec:	80 91 14 01 	lds	r24, 0x0114	; 0x800114 <__data_end>
  f0:	90 91 15 01 	lds	r25, 0x0115	; 0x800115 <__data_end+0x1>
  f4:	89 2b       	or	r24, r25
  f6:	a1 f4       	brne	.+40     	; 0x120 <setFanSpeed+0x7a>
        DDRB |= (1 << FAN_PIN);
  f8:	23 9a       	sbi	0x04, 3	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	8d e2       	ldi	r24, 0x2D	; 45
  fe:	92 e2       	ldi	r25, 0x22	; 34
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <setFanSpeed+0x5a>
 108:	00 c0       	rjmp	.+0      	; 0x10a <setFanSpeed+0x64>
 10a:	00 00       	nop
        _delay_ms(700);
        fanRunning = 1;
 10c:	81 e0       	ldi	r24, 0x01	; 1
 10e:	90 e0       	ldi	r25, 0x00	; 0
 110:	90 93 15 01 	sts	0x0115, r25	; 0x800115 <__data_end+0x1>
 114:	80 93 14 01 	sts	0x0114, r24	; 0x800114 <__data_end>
 118:	03 c0       	rjmp	.+6      	; 0x120 <setFanSpeed+0x7a>
    }
    if(n == MAX_SPEED){
 11a:	2a 97       	sbiw	r28, 0x0a	; 10
 11c:	09 f4       	brne	.+2      	; 0x120 <setFanSpeed+0x7a>
        dutyCycle = 255;
 11e:	6f ef       	ldi	r22, 0xFF	; 255
    }
    OCR2A = dutyCycle; //0-255
 120:	60 93 b3 00 	sts	0x00B3, r22	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    TCCR2A |= (1 << COM2A1);
 124:	e0 eb       	ldi	r30, 0xB0	; 176
 126:	f0 e0       	ldi	r31, 0x00	; 0
 128:	80 81       	ld	r24, Z
 12a:	80 68       	ori	r24, 0x80	; 128
 12c:	80 83       	st	Z, r24
    // set none-inverting mode
    TCCR2A |= (1 << WGM21) | (1 << WGM20);
 12e:	80 81       	ld	r24, Z
 130:	83 60       	ori	r24, 0x03	; 3
 132:	80 83       	st	Z, r24
    // set fast PWM Mode
    TCCR2B |= (1 << CS21);
 134:	e1 eb       	ldi	r30, 0xB1	; 177
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	80 81       	ld	r24, Z
 13a:	82 60       	ori	r24, 0x02	; 2
 13c:	80 83       	st	Z, r24
    // set prescaler to 8 and starts PWM
}
 13e:	df 91       	pop	r29
 140:	cf 91       	pop	r28
 142:	08 95       	ret

00000144 <setLedIndicator>:

void setLedIndicator(int n){
 144:	bc 01       	movw	r22, r24
    /*   Set LEDs off    */
    PORTD = 0x00;
 146:	1b b8       	out	0x0b, r1	; 11
    PORTB &= (0b11101000);
 148:	85 b1       	in	r24, 0x05	; 5
 14a:	88 7e       	andi	r24, 0xE8	; 232
 14c:	85 b9       	out	0x05, r24	; 5
    /*    Skip loop   */
    if(n == OFF){
        return;
    }
    /*  Set LEDs on     */
    for(int i = 0; i < n; i++){
 14e:	16 16       	cp	r1, r22
 150:	17 06       	cpc	r1, r23
 152:	24 f5       	brge	.+72     	; 0x19c <setLedIndicator+0x58>
 154:	e0 e0       	ldi	r30, 0x00	; 0
 156:	f1 e0       	ldi	r31, 0x01	; 1
 158:	20 e0       	ldi	r18, 0x00	; 0
 15a:	30 e0       	ldi	r19, 0x00	; 0
        if(i < 6){
            PORTD |= (1 << ledPins[i]);
        }
        else{
            PORTB |= (1 << ledPins[i]);
 15c:	a1 e0       	ldi	r26, 0x01	; 1
 15e:	b0 e0       	ldi	r27, 0x00	; 0
    if(n == OFF){
        return;
    }
    /*  Set LEDs on     */
    for(int i = 0; i < n; i++){
        if(i < 6){
 160:	26 30       	cpi	r18, 0x06	; 6
 162:	31 05       	cpc	r19, r1
 164:	5c f4       	brge	.+22     	; 0x17c <setLedIndicator+0x38>
            PORTD |= (1 << ledPins[i]);
 166:	4b b1       	in	r20, 0x0b	; 11
 168:	cd 01       	movw	r24, r26
 16a:	00 80       	ld	r0, Z
 16c:	02 c0       	rjmp	.+4      	; 0x172 <setLedIndicator+0x2e>
 16e:	88 0f       	add	r24, r24
 170:	99 1f       	adc	r25, r25
 172:	0a 94       	dec	r0
 174:	e2 f7       	brpl	.-8      	; 0x16e <setLedIndicator+0x2a>
 176:	84 2b       	or	r24, r20
 178:	8b b9       	out	0x0b, r24	; 11
 17a:	0a c0       	rjmp	.+20     	; 0x190 <setLedIndicator+0x4c>
        }
        else{
            PORTB |= (1 << ledPins[i]);
 17c:	95 b1       	in	r25, 0x05	; 5
 17e:	ad 01       	movw	r20, r26
 180:	00 80       	ld	r0, Z
 182:	02 c0       	rjmp	.+4      	; 0x188 <setLedIndicator+0x44>
 184:	44 0f       	add	r20, r20
 186:	55 1f       	adc	r21, r21
 188:	0a 94       	dec	r0
 18a:	e2 f7       	brpl	.-8      	; 0x184 <setLedIndicator+0x40>
 18c:	49 2b       	or	r20, r25
 18e:	45 b9       	out	0x05, r20	; 5
    /*    Skip loop   */
    if(n == OFF){
        return;
    }
    /*  Set LEDs on     */
    for(int i = 0; i < n; i++){
 190:	2f 5f       	subi	r18, 0xFF	; 255
 192:	3f 4f       	sbci	r19, 0xFF	; 255
 194:	32 96       	adiw	r30, 0x02	; 2
 196:	26 17       	cp	r18, r22
 198:	37 07       	cpc	r19, r23
 19a:	11 f7       	brne	.-60     	; 0x160 <setLedIndicator+0x1c>
 19c:	08 95       	ret

0000019e <main>:
void setFanSpeed(int n);

int main(void){
    //DDRC &= ~(1 << ON_BUTTON);
    //DDRC &= ~(1 << OFF_BUTTON);
    DDRC = (0b00000000); //Read
 19e:	17 b8       	out	0x07, r1	; 7
    PORTC = 0xFF;
 1a0:	8f ef       	ldi	r24, 0xFF	; 255
 1a2:	88 b9       	out	0x08, r24	; 8
    DDRD = (0b11111111); //Write
 1a4:	8a b9       	out	0x0a, r24	; 10
    DDRB = (0b11111111); //Write
 1a6:	84 b9       	out	0x04, r24	; 4
    //DDRB |= (1<<LED8_PIN) | (1<<LED9_PIN) | (1<<LED10_PIN) | (1<<FAN_PIN);
    int fanSpeed = OFF;
    int updateSetting = 0;
    /*  Test leds */
    for(int i = 1; i <= 10; i++){
 1a8:	c1 e0       	ldi	r28, 0x01	; 1
 1aa:	d0 e0       	ldi	r29, 0x00	; 0
        setLedIndicator(i);
 1ac:	ce 01       	movw	r24, r28
 1ae:	0e 94 a2 00 	call	0x144	; 0x144 <setLedIndicator>
 1b2:	2f ef       	ldi	r18, 0xFF	; 255
 1b4:	83 ec       	ldi	r24, 0xC3	; 195
 1b6:	99 e0       	ldi	r25, 0x09	; 9
 1b8:	21 50       	subi	r18, 0x01	; 1
 1ba:	80 40       	sbci	r24, 0x00	; 0
 1bc:	90 40       	sbci	r25, 0x00	; 0
 1be:	e1 f7       	brne	.-8      	; 0x1b8 <main+0x1a>
 1c0:	00 c0       	rjmp	.+0      	; 0x1c2 <main+0x24>
 1c2:	00 00       	nop
    DDRB = (0b11111111); //Write
    //DDRB |= (1<<LED8_PIN) | (1<<LED9_PIN) | (1<<LED10_PIN) | (1<<FAN_PIN);
    int fanSpeed = OFF;
    int updateSetting = 0;
    /*  Test leds */
    for(int i = 1; i <= 10; i++){
 1c4:	21 96       	adiw	r28, 0x01	; 1
 1c6:	cb 30       	cpi	r28, 0x0B	; 11
 1c8:	d1 05       	cpc	r29, r1
 1ca:	81 f7       	brne	.-32     	; 0x1ac <main+0xe>
 1cc:	2f ef       	ldi	r18, 0xFF	; 255
 1ce:	83 ed       	ldi	r24, 0xD3	; 211
 1d0:	90 e3       	ldi	r25, 0x30	; 48
 1d2:	21 50       	subi	r18, 0x01	; 1
 1d4:	80 40       	sbci	r24, 0x00	; 0
 1d6:	90 40       	sbci	r25, 0x00	; 0
 1d8:	e1 f7       	brne	.-8      	; 0x1d2 <main+0x34>
 1da:	00 c0       	rjmp	.+0      	; 0x1dc <main+0x3e>
 1dc:	00 00       	nop
    DDRC = (0b00000000); //Read
    PORTC = 0xFF;
    DDRD = (0b11111111); //Write
    DDRB = (0b11111111); //Write
    //DDRB |= (1<<LED8_PIN) | (1<<LED9_PIN) | (1<<LED10_PIN) | (1<<FAN_PIN);
    int fanSpeed = OFF;
 1de:	c0 e0       	ldi	r28, 0x00	; 0
 1e0:	d0 e0       	ldi	r29, 0x00	; 0
        _delay_ms(200);
    }
    _delay_ms(1000);
    /*   Main loop    */
    while (1){
        if(!checkPin(ON_BUTTON)){
 1e2:	31 99       	sbic	0x06, 1	; 6
 1e4:	05 c0       	rjmp	.+10     	; 0x1f0 <main+0x52>
            if(fanSpeed != MAX_SPEED){
 1e6:	ca 30       	cpi	r28, 0x0A	; 10
 1e8:	d1 05       	cpc	r29, r1
 1ea:	d9 f3       	breq	.-10     	; 0x1e2 <main+0x44>
                fanSpeed++;
 1ec:	21 96       	adiw	r28, 0x01	; 1
 1ee:	05 c0       	rjmp	.+10     	; 0x1fa <main+0x5c>
                updateSetting = 1;
           }
        }

        else if(!checkPin(OFF_BUTTON)){
 1f0:	30 99       	sbic	0x06, 0	; 6
 1f2:	f7 cf       	rjmp	.-18     	; 0x1e2 <main+0x44>
            if(fanSpeed != OFF){
 1f4:	20 97       	sbiw	r28, 0x00	; 0
 1f6:	a9 f3       	breq	.-22     	; 0x1e2 <main+0x44>
                fanSpeed--;
 1f8:	21 97       	sbiw	r28, 0x01	; 1
                updateSetting = 1;
            }
        }

        if(updateSetting){
            setFanSpeed(fanSpeed);
 1fa:	ce 01       	movw	r24, r28
 1fc:	0e 94 53 00 	call	0xa6	; 0xa6 <setFanSpeed>
            setLedIndicator(fanSpeed);
 200:	ce 01       	movw	r24, r28
 202:	0e 94 a2 00 	call	0x144	; 0x144 <setLedIndicator>
 206:	2f ef       	ldi	r18, 0xFF	; 255
 208:	83 ec       	ldi	r24, 0xC3	; 195
 20a:	99 e0       	ldi	r25, 0x09	; 9
 20c:	21 50       	subi	r18, 0x01	; 1
 20e:	80 40       	sbci	r24, 0x00	; 0
 210:	90 40       	sbci	r25, 0x00	; 0
 212:	e1 f7       	brne	.-8      	; 0x20c <main+0x6e>
 214:	00 c0       	rjmp	.+0      	; 0x216 <main+0x78>
 216:	00 00       	nop
 218:	e4 cf       	rjmp	.-56     	; 0x1e2 <main+0x44>

0000021a <__subsf3>:
 21a:	50 58       	subi	r21, 0x80	; 128

0000021c <__addsf3>:
 21c:	bb 27       	eor	r27, r27
 21e:	aa 27       	eor	r26, r26
 220:	0e 94 25 01 	call	0x24a	; 0x24a <__addsf3x>
 224:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__fp_round>
 228:	0e 94 ef 01 	call	0x3de	; 0x3de <__fp_pscA>
 22c:	38 f0       	brcs	.+14     	; 0x23c <__addsf3+0x20>
 22e:	0e 94 f6 01 	call	0x3ec	; 0x3ec <__fp_pscB>
 232:	20 f0       	brcs	.+8      	; 0x23c <__addsf3+0x20>
 234:	39 f4       	brne	.+14     	; 0x244 <__addsf3+0x28>
 236:	9f 3f       	cpi	r25, 0xFF	; 255
 238:	19 f4       	brne	.+6      	; 0x240 <__addsf3+0x24>
 23a:	26 f4       	brtc	.+8      	; 0x244 <__addsf3+0x28>
 23c:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__fp_nan>
 240:	0e f4       	brtc	.+2      	; 0x244 <__addsf3+0x28>
 242:	e0 95       	com	r30
 244:	e7 fb       	bst	r30, 7
 246:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_inf>

0000024a <__addsf3x>:
 24a:	e9 2f       	mov	r30, r25
 24c:	0e 94 0e 02 	call	0x41c	; 0x41c <__fp_split3>
 250:	58 f3       	brcs	.-42     	; 0x228 <__addsf3+0xc>
 252:	ba 17       	cp	r27, r26
 254:	62 07       	cpc	r22, r18
 256:	73 07       	cpc	r23, r19
 258:	84 07       	cpc	r24, r20
 25a:	95 07       	cpc	r25, r21
 25c:	20 f0       	brcs	.+8      	; 0x266 <__addsf3x+0x1c>
 25e:	79 f4       	brne	.+30     	; 0x27e <__addsf3x+0x34>
 260:	a6 f5       	brtc	.+104    	; 0x2ca <__addsf3x+0x80>
 262:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_zero>
 266:	0e f4       	brtc	.+2      	; 0x26a <__addsf3x+0x20>
 268:	e0 95       	com	r30
 26a:	0b 2e       	mov	r0, r27
 26c:	ba 2f       	mov	r27, r26
 26e:	a0 2d       	mov	r26, r0
 270:	0b 01       	movw	r0, r22
 272:	b9 01       	movw	r22, r18
 274:	90 01       	movw	r18, r0
 276:	0c 01       	movw	r0, r24
 278:	ca 01       	movw	r24, r20
 27a:	a0 01       	movw	r20, r0
 27c:	11 24       	eor	r1, r1
 27e:	ff 27       	eor	r31, r31
 280:	59 1b       	sub	r21, r25
 282:	99 f0       	breq	.+38     	; 0x2aa <__addsf3x+0x60>
 284:	59 3f       	cpi	r21, 0xF9	; 249
 286:	50 f4       	brcc	.+20     	; 0x29c <__addsf3x+0x52>
 288:	50 3e       	cpi	r21, 0xE0	; 224
 28a:	68 f1       	brcs	.+90     	; 0x2e6 <__addsf3x+0x9c>
 28c:	1a 16       	cp	r1, r26
 28e:	f0 40       	sbci	r31, 0x00	; 0
 290:	a2 2f       	mov	r26, r18
 292:	23 2f       	mov	r18, r19
 294:	34 2f       	mov	r19, r20
 296:	44 27       	eor	r20, r20
 298:	58 5f       	subi	r21, 0xF8	; 248
 29a:	f3 cf       	rjmp	.-26     	; 0x282 <__addsf3x+0x38>
 29c:	46 95       	lsr	r20
 29e:	37 95       	ror	r19
 2a0:	27 95       	ror	r18
 2a2:	a7 95       	ror	r26
 2a4:	f0 40       	sbci	r31, 0x00	; 0
 2a6:	53 95       	inc	r21
 2a8:	c9 f7       	brne	.-14     	; 0x29c <__addsf3x+0x52>
 2aa:	7e f4       	brtc	.+30     	; 0x2ca <__addsf3x+0x80>
 2ac:	1f 16       	cp	r1, r31
 2ae:	ba 0b       	sbc	r27, r26
 2b0:	62 0b       	sbc	r22, r18
 2b2:	73 0b       	sbc	r23, r19
 2b4:	84 0b       	sbc	r24, r20
 2b6:	ba f0       	brmi	.+46     	; 0x2e6 <__addsf3x+0x9c>
 2b8:	91 50       	subi	r25, 0x01	; 1
 2ba:	a1 f0       	breq	.+40     	; 0x2e4 <__addsf3x+0x9a>
 2bc:	ff 0f       	add	r31, r31
 2be:	bb 1f       	adc	r27, r27
 2c0:	66 1f       	adc	r22, r22
 2c2:	77 1f       	adc	r23, r23
 2c4:	88 1f       	adc	r24, r24
 2c6:	c2 f7       	brpl	.-16     	; 0x2b8 <__addsf3x+0x6e>
 2c8:	0e c0       	rjmp	.+28     	; 0x2e6 <__addsf3x+0x9c>
 2ca:	ba 0f       	add	r27, r26
 2cc:	62 1f       	adc	r22, r18
 2ce:	73 1f       	adc	r23, r19
 2d0:	84 1f       	adc	r24, r20
 2d2:	48 f4       	brcc	.+18     	; 0x2e6 <__addsf3x+0x9c>
 2d4:	87 95       	ror	r24
 2d6:	77 95       	ror	r23
 2d8:	67 95       	ror	r22
 2da:	b7 95       	ror	r27
 2dc:	f7 95       	ror	r31
 2de:	9e 3f       	cpi	r25, 0xFE	; 254
 2e0:	08 f0       	brcs	.+2      	; 0x2e4 <__addsf3x+0x9a>
 2e2:	b0 cf       	rjmp	.-160    	; 0x244 <__addsf3+0x28>
 2e4:	93 95       	inc	r25
 2e6:	88 0f       	add	r24, r24
 2e8:	08 f0       	brcs	.+2      	; 0x2ec <__addsf3x+0xa2>
 2ea:	99 27       	eor	r25, r25
 2ec:	ee 0f       	add	r30, r30
 2ee:	97 95       	ror	r25
 2f0:	87 95       	ror	r24
 2f2:	08 95       	ret

000002f4 <__fixunssfsi>:
 2f4:	0e 94 16 02 	call	0x42c	; 0x42c <__fp_splitA>
 2f8:	88 f0       	brcs	.+34     	; 0x31c <__fixunssfsi+0x28>
 2fa:	9f 57       	subi	r25, 0x7F	; 127
 2fc:	98 f0       	brcs	.+38     	; 0x324 <__fixunssfsi+0x30>
 2fe:	b9 2f       	mov	r27, r25
 300:	99 27       	eor	r25, r25
 302:	b7 51       	subi	r27, 0x17	; 23
 304:	b0 f0       	brcs	.+44     	; 0x332 <__fixunssfsi+0x3e>
 306:	e1 f0       	breq	.+56     	; 0x340 <__fixunssfsi+0x4c>
 308:	66 0f       	add	r22, r22
 30a:	77 1f       	adc	r23, r23
 30c:	88 1f       	adc	r24, r24
 30e:	99 1f       	adc	r25, r25
 310:	1a f0       	brmi	.+6      	; 0x318 <__fixunssfsi+0x24>
 312:	ba 95       	dec	r27
 314:	c9 f7       	brne	.-14     	; 0x308 <__fixunssfsi+0x14>
 316:	14 c0       	rjmp	.+40     	; 0x340 <__fixunssfsi+0x4c>
 318:	b1 30       	cpi	r27, 0x01	; 1
 31a:	91 f0       	breq	.+36     	; 0x340 <__fixunssfsi+0x4c>
 31c:	0e 94 30 02 	call	0x460	; 0x460 <__fp_zero>
 320:	b1 e0       	ldi	r27, 0x01	; 1
 322:	08 95       	ret
 324:	0c 94 30 02 	jmp	0x460	; 0x460 <__fp_zero>
 328:	67 2f       	mov	r22, r23
 32a:	78 2f       	mov	r23, r24
 32c:	88 27       	eor	r24, r24
 32e:	b8 5f       	subi	r27, 0xF8	; 248
 330:	39 f0       	breq	.+14     	; 0x340 <__fixunssfsi+0x4c>
 332:	b9 3f       	cpi	r27, 0xF9	; 249
 334:	cc f3       	brlt	.-14     	; 0x328 <__fixunssfsi+0x34>
 336:	86 95       	lsr	r24
 338:	77 95       	ror	r23
 33a:	67 95       	ror	r22
 33c:	b3 95       	inc	r27
 33e:	d9 f7       	brne	.-10     	; 0x336 <__fixunssfsi+0x42>
 340:	3e f4       	brtc	.+14     	; 0x350 <__fixunssfsi+0x5c>
 342:	90 95       	com	r25
 344:	80 95       	com	r24
 346:	70 95       	com	r23
 348:	61 95       	neg	r22
 34a:	7f 4f       	sbci	r23, 0xFF	; 255
 34c:	8f 4f       	sbci	r24, 0xFF	; 255
 34e:	9f 4f       	sbci	r25, 0xFF	; 255
 350:	08 95       	ret

00000352 <__floatunsisf>:
 352:	e8 94       	clt
 354:	09 c0       	rjmp	.+18     	; 0x368 <__floatsisf+0x12>

00000356 <__floatsisf>:
 356:	97 fb       	bst	r25, 7
 358:	3e f4       	brtc	.+14     	; 0x368 <__floatsisf+0x12>
 35a:	90 95       	com	r25
 35c:	80 95       	com	r24
 35e:	70 95       	com	r23
 360:	61 95       	neg	r22
 362:	7f 4f       	sbci	r23, 0xFF	; 255
 364:	8f 4f       	sbci	r24, 0xFF	; 255
 366:	9f 4f       	sbci	r25, 0xFF	; 255
 368:	99 23       	and	r25, r25
 36a:	a9 f0       	breq	.+42     	; 0x396 <__floatsisf+0x40>
 36c:	f9 2f       	mov	r31, r25
 36e:	96 e9       	ldi	r25, 0x96	; 150
 370:	bb 27       	eor	r27, r27
 372:	93 95       	inc	r25
 374:	f6 95       	lsr	r31
 376:	87 95       	ror	r24
 378:	77 95       	ror	r23
 37a:	67 95       	ror	r22
 37c:	b7 95       	ror	r27
 37e:	f1 11       	cpse	r31, r1
 380:	f8 cf       	rjmp	.-16     	; 0x372 <__floatsisf+0x1c>
 382:	fa f4       	brpl	.+62     	; 0x3c2 <__floatsisf+0x6c>
 384:	bb 0f       	add	r27, r27
 386:	11 f4       	brne	.+4      	; 0x38c <__floatsisf+0x36>
 388:	60 ff       	sbrs	r22, 0
 38a:	1b c0       	rjmp	.+54     	; 0x3c2 <__floatsisf+0x6c>
 38c:	6f 5f       	subi	r22, 0xFF	; 255
 38e:	7f 4f       	sbci	r23, 0xFF	; 255
 390:	8f 4f       	sbci	r24, 0xFF	; 255
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	16 c0       	rjmp	.+44     	; 0x3c2 <__floatsisf+0x6c>
 396:	88 23       	and	r24, r24
 398:	11 f0       	breq	.+4      	; 0x39e <__floatsisf+0x48>
 39a:	96 e9       	ldi	r25, 0x96	; 150
 39c:	11 c0       	rjmp	.+34     	; 0x3c0 <__floatsisf+0x6a>
 39e:	77 23       	and	r23, r23
 3a0:	21 f0       	breq	.+8      	; 0x3aa <__floatsisf+0x54>
 3a2:	9e e8       	ldi	r25, 0x8E	; 142
 3a4:	87 2f       	mov	r24, r23
 3a6:	76 2f       	mov	r23, r22
 3a8:	05 c0       	rjmp	.+10     	; 0x3b4 <__floatsisf+0x5e>
 3aa:	66 23       	and	r22, r22
 3ac:	71 f0       	breq	.+28     	; 0x3ca <__floatsisf+0x74>
 3ae:	96 e8       	ldi	r25, 0x86	; 134
 3b0:	86 2f       	mov	r24, r22
 3b2:	70 e0       	ldi	r23, 0x00	; 0
 3b4:	60 e0       	ldi	r22, 0x00	; 0
 3b6:	2a f0       	brmi	.+10     	; 0x3c2 <__floatsisf+0x6c>
 3b8:	9a 95       	dec	r25
 3ba:	66 0f       	add	r22, r22
 3bc:	77 1f       	adc	r23, r23
 3be:	88 1f       	adc	r24, r24
 3c0:	da f7       	brpl	.-10     	; 0x3b8 <__floatsisf+0x62>
 3c2:	88 0f       	add	r24, r24
 3c4:	96 95       	lsr	r25
 3c6:	87 95       	ror	r24
 3c8:	97 f9       	bld	r25, 7
 3ca:	08 95       	ret

000003cc <__fp_inf>:
 3cc:	97 f9       	bld	r25, 7
 3ce:	9f 67       	ori	r25, 0x7F	; 127
 3d0:	80 e8       	ldi	r24, 0x80	; 128
 3d2:	70 e0       	ldi	r23, 0x00	; 0
 3d4:	60 e0       	ldi	r22, 0x00	; 0
 3d6:	08 95       	ret

000003d8 <__fp_nan>:
 3d8:	9f ef       	ldi	r25, 0xFF	; 255
 3da:	80 ec       	ldi	r24, 0xC0	; 192
 3dc:	08 95       	ret

000003de <__fp_pscA>:
 3de:	00 24       	eor	r0, r0
 3e0:	0a 94       	dec	r0
 3e2:	16 16       	cp	r1, r22
 3e4:	17 06       	cpc	r1, r23
 3e6:	18 06       	cpc	r1, r24
 3e8:	09 06       	cpc	r0, r25
 3ea:	08 95       	ret

000003ec <__fp_pscB>:
 3ec:	00 24       	eor	r0, r0
 3ee:	0a 94       	dec	r0
 3f0:	12 16       	cp	r1, r18
 3f2:	13 06       	cpc	r1, r19
 3f4:	14 06       	cpc	r1, r20
 3f6:	05 06       	cpc	r0, r21
 3f8:	08 95       	ret

000003fa <__fp_round>:
 3fa:	09 2e       	mov	r0, r25
 3fc:	03 94       	inc	r0
 3fe:	00 0c       	add	r0, r0
 400:	11 f4       	brne	.+4      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
 402:	88 23       	and	r24, r24
 404:	52 f0       	brmi	.+20     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 406:	bb 0f       	add	r27, r27
 408:	40 f4       	brcc	.+16     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40a:	bf 2b       	or	r27, r31
 40c:	11 f4       	brne	.+4      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40e:	60 ff       	sbrs	r22, 0
 410:	04 c0       	rjmp	.+8      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 412:	6f 5f       	subi	r22, 0xFF	; 255
 414:	7f 4f       	sbci	r23, 0xFF	; 255
 416:	8f 4f       	sbci	r24, 0xFF	; 255
 418:	9f 4f       	sbci	r25, 0xFF	; 255
 41a:	08 95       	ret

0000041c <__fp_split3>:
 41c:	57 fd       	sbrc	r21, 7
 41e:	90 58       	subi	r25, 0x80	; 128
 420:	44 0f       	add	r20, r20
 422:	55 1f       	adc	r21, r21
 424:	59 f0       	breq	.+22     	; 0x43c <__fp_splitA+0x10>
 426:	5f 3f       	cpi	r21, 0xFF	; 255
 428:	71 f0       	breq	.+28     	; 0x446 <__fp_splitA+0x1a>
 42a:	47 95       	ror	r20

0000042c <__fp_splitA>:
 42c:	88 0f       	add	r24, r24
 42e:	97 fb       	bst	r25, 7
 430:	99 1f       	adc	r25, r25
 432:	61 f0       	breq	.+24     	; 0x44c <__fp_splitA+0x20>
 434:	9f 3f       	cpi	r25, 0xFF	; 255
 436:	79 f0       	breq	.+30     	; 0x456 <__fp_splitA+0x2a>
 438:	87 95       	ror	r24
 43a:	08 95       	ret
 43c:	12 16       	cp	r1, r18
 43e:	13 06       	cpc	r1, r19
 440:	14 06       	cpc	r1, r20
 442:	55 1f       	adc	r21, r21
 444:	f2 cf       	rjmp	.-28     	; 0x42a <__fp_split3+0xe>
 446:	46 95       	lsr	r20
 448:	f1 df       	rcall	.-30     	; 0x42c <__fp_splitA>
 44a:	08 c0       	rjmp	.+16     	; 0x45c <__fp_splitA+0x30>
 44c:	16 16       	cp	r1, r22
 44e:	17 06       	cpc	r1, r23
 450:	18 06       	cpc	r1, r24
 452:	99 1f       	adc	r25, r25
 454:	f1 cf       	rjmp	.-30     	; 0x438 <__fp_splitA+0xc>
 456:	86 95       	lsr	r24
 458:	71 05       	cpc	r23, r1
 45a:	61 05       	cpc	r22, r1
 45c:	08 94       	sec
 45e:	08 95       	ret

00000460 <__fp_zero>:
 460:	e8 94       	clt

00000462 <__fp_szero>:
 462:	bb 27       	eor	r27, r27
 464:	66 27       	eor	r22, r22
 466:	77 27       	eor	r23, r23
 468:	cb 01       	movw	r24, r22
 46a:	97 f9       	bld	r25, 7
 46c:	08 95       	ret

0000046e <__mulsf3>:
 46e:	0e 94 4a 02 	call	0x494	; 0x494 <__mulsf3x>
 472:	0c 94 fd 01 	jmp	0x3fa	; 0x3fa <__fp_round>
 476:	0e 94 ef 01 	call	0x3de	; 0x3de <__fp_pscA>
 47a:	38 f0       	brcs	.+14     	; 0x48a <__mulsf3+0x1c>
 47c:	0e 94 f6 01 	call	0x3ec	; 0x3ec <__fp_pscB>
 480:	20 f0       	brcs	.+8      	; 0x48a <__mulsf3+0x1c>
 482:	95 23       	and	r25, r21
 484:	11 f0       	breq	.+4      	; 0x48a <__mulsf3+0x1c>
 486:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_inf>
 48a:	0c 94 ec 01 	jmp	0x3d8	; 0x3d8 <__fp_nan>
 48e:	11 24       	eor	r1, r1
 490:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_szero>

00000494 <__mulsf3x>:
 494:	0e 94 0e 02 	call	0x41c	; 0x41c <__fp_split3>
 498:	70 f3       	brcs	.-36     	; 0x476 <__mulsf3+0x8>

0000049a <__mulsf3_pse>:
 49a:	95 9f       	mul	r25, r21
 49c:	c1 f3       	breq	.-16     	; 0x48e <__mulsf3+0x20>
 49e:	95 0f       	add	r25, r21
 4a0:	50 e0       	ldi	r21, 0x00	; 0
 4a2:	55 1f       	adc	r21, r21
 4a4:	62 9f       	mul	r22, r18
 4a6:	f0 01       	movw	r30, r0
 4a8:	72 9f       	mul	r23, r18
 4aa:	bb 27       	eor	r27, r27
 4ac:	f0 0d       	add	r31, r0
 4ae:	b1 1d       	adc	r27, r1
 4b0:	63 9f       	mul	r22, r19
 4b2:	aa 27       	eor	r26, r26
 4b4:	f0 0d       	add	r31, r0
 4b6:	b1 1d       	adc	r27, r1
 4b8:	aa 1f       	adc	r26, r26
 4ba:	64 9f       	mul	r22, r20
 4bc:	66 27       	eor	r22, r22
 4be:	b0 0d       	add	r27, r0
 4c0:	a1 1d       	adc	r26, r1
 4c2:	66 1f       	adc	r22, r22
 4c4:	82 9f       	mul	r24, r18
 4c6:	22 27       	eor	r18, r18
 4c8:	b0 0d       	add	r27, r0
 4ca:	a1 1d       	adc	r26, r1
 4cc:	62 1f       	adc	r22, r18
 4ce:	73 9f       	mul	r23, r19
 4d0:	b0 0d       	add	r27, r0
 4d2:	a1 1d       	adc	r26, r1
 4d4:	62 1f       	adc	r22, r18
 4d6:	83 9f       	mul	r24, r19
 4d8:	a0 0d       	add	r26, r0
 4da:	61 1d       	adc	r22, r1
 4dc:	22 1f       	adc	r18, r18
 4de:	74 9f       	mul	r23, r20
 4e0:	33 27       	eor	r19, r19
 4e2:	a0 0d       	add	r26, r0
 4e4:	61 1d       	adc	r22, r1
 4e6:	23 1f       	adc	r18, r19
 4e8:	84 9f       	mul	r24, r20
 4ea:	60 0d       	add	r22, r0
 4ec:	21 1d       	adc	r18, r1
 4ee:	82 2f       	mov	r24, r18
 4f0:	76 2f       	mov	r23, r22
 4f2:	6a 2f       	mov	r22, r26
 4f4:	11 24       	eor	r1, r1
 4f6:	9f 57       	subi	r25, 0x7F	; 127
 4f8:	50 40       	sbci	r21, 0x00	; 0
 4fa:	9a f0       	brmi	.+38     	; 0x522 <__mulsf3_pse+0x88>
 4fc:	f1 f0       	breq	.+60     	; 0x53a <__mulsf3_pse+0xa0>
 4fe:	88 23       	and	r24, r24
 500:	4a f0       	brmi	.+18     	; 0x514 <__mulsf3_pse+0x7a>
 502:	ee 0f       	add	r30, r30
 504:	ff 1f       	adc	r31, r31
 506:	bb 1f       	adc	r27, r27
 508:	66 1f       	adc	r22, r22
 50a:	77 1f       	adc	r23, r23
 50c:	88 1f       	adc	r24, r24
 50e:	91 50       	subi	r25, 0x01	; 1
 510:	50 40       	sbci	r21, 0x00	; 0
 512:	a9 f7       	brne	.-22     	; 0x4fe <__mulsf3_pse+0x64>
 514:	9e 3f       	cpi	r25, 0xFE	; 254
 516:	51 05       	cpc	r21, r1
 518:	80 f0       	brcs	.+32     	; 0x53a <__mulsf3_pse+0xa0>
 51a:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__fp_inf>
 51e:	0c 94 31 02 	jmp	0x462	; 0x462 <__fp_szero>
 522:	5f 3f       	cpi	r21, 0xFF	; 255
 524:	e4 f3       	brlt	.-8      	; 0x51e <__mulsf3_pse+0x84>
 526:	98 3e       	cpi	r25, 0xE8	; 232
 528:	d4 f3       	brlt	.-12     	; 0x51e <__mulsf3_pse+0x84>
 52a:	86 95       	lsr	r24
 52c:	77 95       	ror	r23
 52e:	67 95       	ror	r22
 530:	b7 95       	ror	r27
 532:	f7 95       	ror	r31
 534:	e7 95       	ror	r30
 536:	9f 5f       	subi	r25, 0xFF	; 255
 538:	c1 f7       	brne	.-16     	; 0x52a <__mulsf3_pse+0x90>
 53a:	fe 2b       	or	r31, r30
 53c:	88 0f       	add	r24, r24
 53e:	91 1d       	adc	r25, r1
 540:	96 95       	lsr	r25
 542:	87 95       	ror	r24
 544:	97 f9       	bld	r25, 7
 546:	08 95       	ret

00000548 <_exit>:
 548:	f8 94       	cli

0000054a <__stop_program>:
 54a:	ff cf       	rjmp	.-2      	; 0x54a <__stop_program>
